@use '../../../scss/global' as *;

.header-container {
  background-color: $white;

  @include flex-center(row);
  justify-content: space-between;
  padding: 2.5rem 2rem;
  background-color: $white;
  box-shadow: 0 4px 20px rgba($black, 0.08);
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 4;
  transition: box-shadow 0.3s ease, padding 0.3s ease;

  @include respond-above(lg) {
    padding: 1.5rem 6rem;
  }

  .logo {
    font-size: 1.5rem;
    font-weight: 700;
    transition: transform 0.3s ease;

    @include respond-above(md) {
      font-size: 1.75rem;
    }

    img {
      transition: transform 0.3s ease;

      &:hover {
        transform: scaleX(1.05) scaleY(1.05);
      }
    }
  }

  .nav-links {
    display: none;

    @include respond-above(md) {
      @include flex-center(row);
      gap: 2.5rem;
    }

    .nav-link {
      color: $primary-color;
      font-weight: 500;
      position: relative;
      padding: 0.5rem 0;
      font-size: 1rem;
      text-decoration: none;
      overflow: hidden;

      // Main link transition
      transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);

      span {
        position: relative;
        display: inline-block;
        transition: transform 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
      }

      .local_fire {
        color: red;
        transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        margin-left: 4px;
      }

      // Line animation on hover
      &::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 2px;
        background-color: $light-brown;
        transform: scaleX(0);
        transform-origin: right;
        transition: transform 0.5s cubic-bezier(0.23, 1, 0.32, 1);
      }

      &:hover {
        color: $light-brown;

        span {
          transform: translateY(-4px);
        }

        &::after {
          transform: scaleX(1);
          transform-origin: left;
        }

        .local_fire {
          transform: rotate(10deg) scaleX(1.3) scaleY(1.3);
          animation: flame 1s ease-in-out infinite alternate;
        }
      }

      // Active state styling
      &.router-link-active {
        color: $light-brown;
        font-weight: 600;

        &::after {
          transform: scaleX(1);
          background-color: $light-brown;
          height: 2px;
        }
      }
    }
  }

  .header-actions {
    @include flex-center(row);
    gap: 1.5rem;

    .cart-button {
      position: relative;
      transition: all 0.3s ease;

      mat-icon {
        transition: transform 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275), color 0.3s ease;
      }

      &:hover {
        mat-icon {
          color: $light-brown;
        }
      }

      .cart-count {
        position: absolute;
        top: -8px;
        right: -8px;
        background: $accent-color;
        color: $white;
        border-radius: 50%;
        padding: 2px 8px;
        font-size: 0.75rem;
        transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);

        &:hover {
          transform: scaleX(1.1) scaleY(1.1);
        }
      }
    }

    .mobile-menu-button {
      @include respond-above(md) {
        display: none;
      }
    }
  }
}

// Scroll behavior
.header-scrolled {
  padding: 1rem 2rem !important;
  box-shadow: 0 6px 25px rgba($black, 0.12) !important;
  background-color: rgba($white, 0.98) !important;
  backdrop-filter: blur(5px);

  @include respond-above(lg) {
    padding: 1rem 6rem !important;
  }
}

@keyframes flame {
  0% {
    transform: scaleX(1.1) scaleY(1.1) rotate(0deg);
    color: #ff5722;
  }
  50% {
    transform: scaleX(1.3) scaleY(1.3) rotate(5deg);
    color: #ff9800;
  }
  100% {
    transform: scaleX(1.2) scaleY(1.2) rotate(-5deg);
    color: #ff5722;
  }
}
